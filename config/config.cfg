############################################
###    CAESAR CONFIG OPTIONS
############################################
###
//============================
//==      INPUT             == 
//============================
inputFile = myInputFile.root												| Input image filename (.root/.fits)
inputImage = img																		| Input image name in ROOT file 
readTileImage = false                               | Read sub-image (T/F)
tileMinX = 0                                        | Min x coords to be read in image
tileMaxX = 0																				| Max x coords to be read in image
tileMinY = 0																				| Min y coords to be read in image
tileMaxY = 0																				| Max y coords to be read in image
###
###
//============================
//==      BEAM INFO         == 
//============================
pixSize = 1.0   																	| User-supplied map pixel area in arcsec (pixSize=CDELT, default=1 arcsec)
beamFWHM = 6.5                                    | User-supplied circular beam FWHM in arcsec (beamFWHM=BMAJ=BMIN, default=6.5 arcsec)
beamBmaj = 10                                     | User-supplied elliptical beam bmaj FWHM in arcsec (default=10 arcsec)
beamBmin = 5                                     | User-supplied elliptical beam bmin FWHM in arcsec (default=5 arcsec)
beamTheta = 0.0                                   | User-supplied beam theta in deg (default=0)
###
###
//=============================================
//==      DISTRIBUTED PROCESSING             == 
//=============================================
nThreads = -1                                      | Number of threads used if OPENMP is enabled (-1=all available threads)
splitInTiles = false                               | Split input image in tiles (default=false)
tileSizeX = 1000                                   | Size of tile X (in pixels) to partition the input image
tileSizeY = 1000																	 | Size of tile Y (in pixels) to partition the input image
useTileOverlap = false                             | Allow for tile overlap
tileStepSizeX = 1                                  | Tile step size fraction X to partition the input image (1=no overlap,0.5=half overlap, ...)
tileStepSizeY = 1																	 | Tile step size fraction Y to partition the input image (1=no overlap,0.5=half overlap, ...)
mergeSourcesAtEdge = true 												 | Merge sources found at tile edge by each workers (default=true)
mergeSources = true 												       | Merge overlapping sources found by each workers (default=false)
mergeCompactSources = false									       | Merge overlapping compact sources found by each workers (default=false)
mergeExtendedSources = true									       | Merge overlapping extended/compact sources found by each workers (default=false)
###
###
//==============================
//==      LOGGING             == 
//==============================
loggerTarget = 1                                    | Logger target (1=CONSOLE, 2=FILE, 3=SYSLOG)
loggerTag = logger                                  | Tag given to the log messages
logLevel = INFO                                     | Log level threshold (DEBUG>INFO>WARN>ERROR>FATAL)
logFile = out.log                                   | Log file name (for FILE target only)
appendToLogFile = false                             | If false a new log file is created, otherwise logs are appended (T/F)
maxLogFileSize = 10MB                               | Max size of log file before rotation, ex. 10MB, 1KB, etc...
maxBackupLogFiles = 2                               | Max number of backup files created after file threshold is reached 
consoleTarget = System.out                          | Console target (System.out/System.err)
syslogFacility = local6                             | Syslog facility used with syslog target
###
###
//=============================
//==      OUTPUT             == 
//=============================
isInteractiveRun = false                            | Is interactive run (graph plots enabled) (T/F)
outputFile = myOutputFile.root              				| Output filename (.root)
outputCatalogFile = myCatalog.dat										| Output catalog ascii filename
outputComponentCatalogFile = myFitCompCatalog.dat		| Output fitted component catalog ascii filename
ds9RegionFile = myDS9Catalog.reg									  | DS9 region file (.reg) where to store source catalog 
ds9FitRegionFile = myDS9FitCatalog.reg							| DS9 region file (.reg) where to store fitted source catalog 
ds9RegionFormat = 2                                 | DS9 region format (1=ellipse, 2=polygon)
convertDS9RegionsToWCS = false											| Convert DS9 regions (contours & ellipses) to WCS (default=false)
ds9WCSType = 0																			| DS9 region WCS output format (0=J2000,1=B1950,2=GAL) (default=0)
inputMapFITSFile = 	myInputMap.fits									| Output filename where to store input map in FITS format (.fits)
residualMapFITSFile = myResMap.fits									| Output filename where to store residual map in FITS format (.fits) 
saliencyMapFITSFile = mySaliencyMap.fits						| Output filename where to store saliency map in FITS format (.fits) 
bkgMapFITSFile = myBkgMap.fits											| Output filename where to store bkg map in FITS format (.fits) 
noiseMapFITSFile = myNoiseMap.fits									| Output filename where to store noise map in FITS format (.fits) 
significanceMapFITSFile = mySignificanceMap.fits	  | Output filename where to store significance map in FITS format (.fits) 
saveToFile = true																		| Save results & maps to output ROOT file (T/F)
saveToCatalogFile = true														! Save sources to catalog files (island, fitted components) (T/F)
saveToFITSFile = false															| Save results to output FITS file(s) (T/F)
saveDS9Region = true																| Save DS9 region files (T/F) (default=T)
saveInputMap = true																	| Save input map to ROOT file (T/F)
saveConfig = true																		| Save config options to ROOT file (T/F)
saveResidualMap = true															| Save residual map to ROOT file (T/F)
saveBkgMap = false																	| Save bkg map to ROOT file (T/F)
saveNoiseMap = false																| Save noise map to ROOT file (T/F)
saveSignificanceMap = false													| Save significance map to ROOT file (T/F)
saveSaliencyMap = false															| Save saliency map to ROOT file (T/F)
saveSources = true																	| Save sources to ROOT file (T/F)
saveEdgenessMap = false                             | Save edgeness map computed in extended source search to ROOT file (T/F)
saveCurvatureMap = false                            | Save curvature map to ROOT file (T/F)
saveSegmentedMap = true                             | Save segmented map computed in extended source search to ROOT file (T/F)
###
###
//===========================
//==   BKG OPTIONS         == 
//===========================
useLocalBkg = true																	| Use local background calculation instead of global bkg (T/F)
localBkgMethod = 1																	| Local background method (1=Grid, 2=Superpixel)
use2ndPassInLocalBkg = true													| Use 2nd pass to refine noise calculation in local bkg (T/F)
skipOutliersInLocalBkg = true											  | Skip outliers (e.g. bright point sources) in local bkg computation (T/F)
bkgEstimator = 2																		| Background estimator (1=Mean,2=Median,3=BiWeight,4=ClippedMedian)
useBeamInfoInBkg = true                             | Use beam information in bkg box definition (if available) (T/F)
boxSizeX = 20																			| X Size of local background box in #pixels
boxSizeY = 20																			| Y Size of local background box in #pixels
gridSizeX = 0.2																			| X Size of local background grid used for bkg interpolation
gridSizeY = 0.2																			| Y Size of local background grid used for bkg interpolation
sourceBkgBoxBorderSize = 20                         | Border size in pixels of box around source bounding box used to estimate bkg for fitting
###
###
//===============================
//==  FILTERING OPTIONS        ==
//===============================
usePreSmoothing = true															| Use a pre-smoothing stage to filter input image for extended source search (T/F)
smoothFilter = 2																		| Smoothing filter (1=gaus,2=guided)
gausFilterKernSize = 5															| Gaussian filter kernel size
gausFilterSigma = 1																	| Gaussian filter sigma
guidedFilterRadius = 12															| Guided filter radius par
guidedFilterColorEps = 0.04													| Guided filter color epsilon parameter
###
###
//====================================
//==  SOURCE FINDING OPTIONS        ==
//====================================
searchCompactSources = true													| Search compact sources (T/F)
minNPix = 5																				  | Minimum number of pixel to consider a source
seedThr = 5 																				| Seed threshold in flood filling algo for faint sources
mergeThr = 2.6																			| Merge/aggregation threshold in flood filling algo
mergeBelowSeed = false                              | Aggregate to seed only pixels above merge threshold but below seed threshold (T/F)
searchNegativeExcess = false												| Search negative excess together with positive in compact source search
compactSourceSearchNIters = 10                      | Number of iterations to be performed in compact source search (default=10)
seedThrStep = 1                                     | Seed threshold decrease step size between iteration (default=1)
###
###
//===========================================
//==  NESTED SOURCE FINDING OPTIONS        ==
//===========================================
searchNestedSources = true													| Search for nested sources inside candidate sources (T/F)
blobMaskMethod = 2																	| Blob mask method (1=gaus smooth + laplacian,2=multi-scale LoG)
sourceToBeamAreaThrToSearchNested = 0               | Source area/beam thr to add nested sources (e.g. npix>thr*beamArea). NB: thr=0 means always if searchNestedSources is enabled (default=0)
nestedBlobThrFactor = 0                             | Threshold (multiple of curvature median) used for nested blob finding
minNestedMotherDist = 10                            | Minimum distance in pixels (in x or y) between nested and parent blob below which nested is skipped
maxMatchingPixFraction = 0.01                       | Maximum fraction of matching pixels between nested and parent blob above which nested is skipped
nestedBlobPeakZThr = 5															| Nested blob peak significance threshold wrt mother source (below thr nested blob is skipped) (default=5 sigmas) 
nestedBlobPeakZMergeThr = 2.5												| Nested blob peak significance threshold wrt mother source (below thr nested blob is skipped) (default=2.5 sigmas)
nestedBlobMinScale = 1                              | Nested blob min search scale (sigma=minscale x beam width) (default=1)
nestedBlobMaxScale = 3                              | Nested blob max search scale (sigma=maxscale x beam width) (default=3)
nestedBlobScaleStep = 1                             | Nested blob scale step (scale=minscale + step) (default=1)
nestedBlobKernFactor = 1                            | Nested blob curvature/LoG kernel size factor f (kern size=f x sigma) (default=1)		
###
###
//==================================
//==  SOURCE FITTING OPTIONS      ==
//==================================
fitSources = false                             | Deblend point-like sources with multi-component gaus fit (T/F)
fitUseThreads = true                           | Use multithread in source fitting (default=false) (T/F)
fitScaleDataToMax = true                       | Scale source flux data to max peak flux if true, otherwise scale to mJy units (default=false)
fitMinimizer = Minuit2                         | Minimizer {Minuit,Minuit2} (default=Minuit) (T/F)
fitMinimizerAlgo = minimize                    | Minimizer algorithm: {migrad,simplex,scan,minimize,fumili} (default=migrad)
fitPrintLevel = 1                              | Minimizer print level (default=1)
fitStrategy = 2                                | Minimizer strategy (higher means more accurate but more fcn calls) (default=2)
nBeamsMaxToFit = 20														 | Maximum number of beams in source for fitting (if above thr fitting not performed)
fitUseNestedAsComponents = false               | If true use nested sources (if any) to estimate fitted components, otherwise estimate blended blobs (default=false)
fitMaxNComponents = 3                          | Maximum number of components fitted in a blob (T/F)
fitWithCentroidLimits = true 									 | Use limits when fitting gaussian centroid (T/F)
fitCentroidLimit = 3                           | Source centroid limits in pixels
fixCentroidInPreFit = false                    | Fix centroid pars in prefit (T/F) 
fitWithBkgLimits = true												 | Use limits when fitting bkg offset (T/F)
fitWithFixedBkg = true                         | Fix bkg level parameter in fit (T/F)
fitUseEstimatedBkgLevel = true                 | Use estimated (avg bkg) as bkg level par in fit (T/F)  
fitUseBkgBoxEstimate = false                   | Use bkg estimated in a box around source (if available) as bkg level par in fit (T/F)
fitBkgLevel = 0                                | Fixed bkg level used when fitWithFixedBkg=true
fitWithAmplLimits = true                       | Use limits when fitting gaussian amplitude (T/F)
fixAmplInPreFit = true                        | Fix amplitude par in pre-fit (T/F)
fitAmplLimit = 0.3                             | Flux amplitude limit around source peak (e.g. Speak*(1+-fitAmplLimit))
fixSigmaInPreFit = false                        | Fix sigma in prefit (T/F)
fitWithSigmaLimits = true                      | Use limits when fitting gaussian sigmas (T/F)
fitWithFixedSigma = false                      | Fix sigmas in fit (T/F)
fitSigmaLimit = 0.3                            | Gaussian sigma limit around psf or beam (e.g. Bmaj*(1+-fitSigmaLimit))
fitWithThetaLimits = true                      | Use limits when fitting gaussian theta par (T/F)
fixThetaInPreFit = false                        | Fix theta in prefit (T/F)
fitWithFixedTheta = false                      | Fix gaussian ellipse theta par in fit (T/F)
fitThetaLimit = 5                              | Gaussian theta limit around psf or beam in degrees (e.g. Bpa +- fitThetaLimit)
useFluxZCutInFit = false                       | Include in fit only source pixels above a given flux significance level (T/F)
fitZCutMin = 2.5                               | Flux significance below which source pixels are not included in the fit
peakMinKernelSize = 3                          | Minimum dilation kernel size (in pixels) used to detect peaks (default=3)
peakMaxKernelSize = 7                          | Maximum dilation kernel size (in pixels) used to detect peaks (default=7)
peakKernelMultiplicityThr = 1                  | Requested peak multiplicity across different dilation kernels (-1=peak found in all given kernels,1=only in one kernel, etc)
peakShiftTolerance = 1                         | Shift tolerance (in pixels) used to compare peaks in different dilation kernels (default=1 pixel)
peakZThrMin = 1                                | Minimum peak flux significance (in nsigmas above avg source bkg & noise) below which peak is skipped (default=1)
fitFcnTolerance = 1.e-5												 | Fit function minimization tolerance (default=1.e-5)
fitMaxIters = 100000                           | Fit max number of iterations (default=100000)
fitImproveConvergence = true                   | Try to improve convergence by iterating fit if not converged or converged with pars at limits (default=true)
fitNRetries = 1000                             | Number of times fit is repeated (with enlarged limits) if improve convergence flag is enabled (default=1000)
fitDoFinalMinimizerStep = true                 | Switch on/off running of final minimizer step after fit convergence with MIGRAD (default=true)
##fitFinalMinimizer = 2                          | Final minimizer (1=MIGRAD,2=HESS,3=MINOS) (default=2)
fitChi2RegPar = 1															 | Chi2 regularization par chi2=chi2_signal + regpar*chi2_bkg (default=1)
fitParBoundIncreaseStepSize = 0.1              | Par bound increase step size (e.g. parmax= parmax_old+(1+nretry)*fitParBoundIncreaseStepSize*0.5*|max-min|) (default=0.1)
fitRetryWithLessComponents = true              | If fit does not converge repeat it iteratively with one component less at each cycle (default=true) (T/F)
fitApplyRedChi2Cut = true								       | Apply fit Chi2/NDF cut. Used to set fit quality flag. If Chi2/NDF>cut the good fit cut is not passed (default=true) (T/F)
fitRedChi2Cut = 5															 | Chi2/NDF cut value (default=5)
fitApplyFitEllipseCuts = false								 | Apply fit ellipse selection cuts. If not passed fit component is tagged as fake (default=false) (T/F)
fitEllipseEccentricityRatioMinCut = 0.5        | Ellipse eccentricity ratio (fit/beam) min cut value (default=0.5)
fitEllipseEccentricityRatioMaxCut = 1.5        | Ellipse eccentricity ratio (fit/beam) max cut value (default=1.5)
fitEllipseAreaRatioMinCut = 0.01 							 | Ellipse area ratio (fit/beam) min cut value (default=0.01)
fitEllipseAreaRatioMaxCut = 10                 | Ellipse area ratio (fit/beam) min cut value (default=10)
fitEllipseRotAngleCut = 45                     | Ellipse rot angle diff (|fit-beam|) cut value in degrees (default=45)
###
###
//================================
//==  SOURCE SELECTION OPTIONS  ==
//================================
applySourceSelection = true													| Apply selection cuts to sources (T/F)
useMinBoundingBoxCut = true													| Use bounding box cut (T(F)
sourceMinBoundingBox = 2														| Minimum bounding box cut (source tagged as bad if below this threshold)
useCircRatioCut = false															| Use circularity ratio cut (T/F)
psCircRatioThr = 0.4																| Circular ratio threshold (source passes point-like cut if above this threshold)
useElongCut = false																	| Use elongation cut (T/F)
psElongThr = 0.7																		| Elongation threshold (source passes point-like cut if below this threshold
useEllipseAreaRatioCut = false											| Use Ellipse area ratio cut (T/F)
psEllipseAreaRatioMinThr = 0.6											| Ellipse area ratio min threshold
psEllipseAreaRatioMaxThr = 1.4											| Ellipse area ratio max threshold
useMaxNPixCut = false																| Use max npixels cut (T/F)
psMaxNPix = 1000																		| Max number of pixels for point-like sources (source passes point-like cut if below this threshold)
useNBeamsCut = true                                 | Use nBeams cut (T/F)
psNBeamsThr = 3                                     | nBeams threshold (sources passes point-like cut if nBeams<thr)
###
###
//================================
//==  SOURCE RESIDUAL OPTIONS   ==
//================================
removeNestedSources = true 													| Dilate sources nested inside bright sources (T/F)
residualZThr = 5                                    | Significance threshold (in sigmas) above which sources are dilated
residualZHighThr = 10                               | Significance threshold (in sigmas) above which sources are always dilated (even if they have nested or different type)
dilateKernelSize = 9																| Size of kernel (odd) to be used in dilation operation
removedSourceType = 2																| Type of bright sources to be dilated from the input image (-1=ALL,1=COMPACT,2=POINT-LIKE,3=EXTENDED) 
residualModel = 1																    | Dilate source model  (1=bkg,2=median)
residualModelRandomize = false											| Randomize dilated values (T/F)
psSubtractionMethod = 2                             | Point-source subtraction method (1=dilation, 2=model subtraction (default=1)
###
###
//=============================================
//==  EXTENDED SOURCE FINDING OPTIONS        ==
//=============================================
searchExtendedSources = true												| Search extended sources after bright source removal (T/F)
extendedSearchMethod = 4														| Extended source search method (1=WT-thresholding,2=SPSegmentation,3=ActiveContour,4=Saliency thresholding)
useResidualInExtendedSearch = true									| Use residual image (with selected sources dilated) as input for extended source search
###
###
//================================================
//==  WAVELET TRANSFORM ALGORITHM MAIN OPTIONS  ==
//================================================
wtScaleSearchMin = 3																| Minimum Wavelet scale to be used for extended source search
wtScaleSearchMax = 6																| Maximum Wavelet scale to be used for extended source search
###
###
//==============================================
//==  ACTIVE CONTOUR ALGORITHMS MAIN OPTIONS  ==
//==============================================
acMethod = 2															          | Active contour method (1=Chanvese, 2=LRAC)
acNIters = 1000																			| Maximum number of iterations
acInitLevelSetMethod = 1                            | Level set initialization method (1=circle,2=checkerboard,3=saliency)
acInitLevelSetSizePar = 0.1                         | Level set size fraction wrt to minimum image size (e.g. circle radius=fraction x image size)
acTolerance = 0.1                                   | Tolerance parameter to stop main iteration loop
###
###
//===================================
//==  CHAN-VESE ALGORITHM OPTIONS  ==
//===================================
##cvNIters = 1000 																	| Number of iterations
cvNItersInner = 5                                   | Chan-Vese maximum number of inner iterations
cvNItersReInit = 5                                  | Chan-Vese maximum number of iterations performed in re-initialization step
cvTimeStepPar = 0.007																| Chan-Vese time step par		
cvWindowSizePar = 1																	| Chan-Vese window size par
cvLambda1Par = 1																		| Chan-Vese lambda1 par
cvLambda2Par = 2																		| Chan-Vese lambda2 par
cvMuPar = 0.5																				| Chan-Vese mu par
cvNuPar = 0																					|	Chan-Vese nu par
cvPPar = 1																					| Chan-Vese p par		
###
###
//===================================
//==  LRAC ALGORITHM OPTIONS       ==
//===================================
##lracNIters = 1000 																| Number of iterations
lracLambdaPar = 0.1																  | Regularization par		
lracRadiusPar = 1																	  | Radius of locatization ball par
lracEpsPar = 0.1																	  | Convergence par
###
###
//===============================
//==  SALIENCY FILTER OPTIONS  ==
//===============================
saliencyUseOptimalThr = true                        | Use optimal threshold in multiscale saliency thresholding (T/F)
saliencyThrFactor = 2.8															| Saliency threshold factor for tagging signal regions (thr=<saliency>*factor)
saliencyBkgThrFactor = 1														| Saliency threshold factor for tagging bkg regions (thr=<saliency>*factor)
saliencyImgThrFactor = 1														| Threshold factor to consider a region as significant (thr=<img>*factor)
saliencyResoMin = 20																| Saliency min reso par
saliencyResoMax = 60																| Saliency max reso par
saliencyResoStep = 10																| Saliency reso step par 
saliencyUseCurvInDiss = false												| Use curvature parameter in dissimilarity estimation (T/F)
saliencyUseRobustPars = false												| Use robust pars in saliency map computation (T/F)
saliencyUseBkgMap = true														| Use bkg map in saliency map computation (T/F)
saliencyUseNoiseMap = true					 								| Use noise map in saliency map computation (T/F)
saliencyNNFactor = 1															  | Fraction of most similar neighbors used in saliency map computation
##saliencySpatialRegFactor = 6												| Spatial regularization factor (ruling exp decay in saliency spatial weighting)
saliencyMultiResoCombThrFactor = 0.7								| Fraction of combined salient multi-resolution maps to consider global saliency
saliencyDissExpFalloffPar = 100                     | Dissimilarity exponential cutoff parameter (value)
saliencySpatialDistRegPar = 1                       | Spatial-color distance regularization par (value, 1=equal weights)
###
###
//==================================
//==    SP SEGMENTATION OPTIONS   ==
//==================================
spSize = 20																					| Initial superpixel size
spBeta = 1																					| Initial superpixel regularization parameter
spMinArea = 10																			| Initial superpixel min area
spUseLogContrast = false														| Use intensity log scale to generate initial superpixel partition (T/F)
###
###
//==================================
//==    SP MERGING OPTIONS        ==
//==================================
spMergingNSegmentsToStop = 1                 | Number of segments below which the segmentation is stopped (default=1)
spMergingRatio = 0.3                         | Fraction of similar segments merged per each hierarchical level (default=0.3)
spMergingRegPar = 0.5                        | Regularization parameters balancing region edge and similarity (default=0.5)
spMergingMaxDissRatio = 1000                 | Mutual segment dissimilarity ratio (R=Diss(ji)/Diss(ij)) above which 1st-order neighbors are not merged (default=1000)
spMergingMaxDissRatio2ndNeighbours = 1.05    | Mutual segment dissimilarity ratio (R=Diss(ji)/Diss(ij)) above which 2nd-order neighbors are not merged (default=1.05)
spMergingDissThreshold = 3                   | Absolute dissimilarity ratio (wrt to initial average diss) threshold above which segments are not merged (default=3)
spMergingEdgeModel = 2                       | Superpixel edge model (1=Kirsch,2=Chan-Vese) 
spMergingIncludeSpatialPars = false          | Include spatial pars in region dissimilarity measure (default=false)
###
###
//spHierMergingPars = 1  0.3  0.5  3         | Hierarch algo pars: MIN_SEGMENTS, MERGING_RATIO, DIST_REGULARIZATION, DIST_THRESHOLD es 0.25 (value,value,value,value)
//spHierMergingMaxDissRatio = 1000  1.05       | Maximum mutual dissimilarity among regions for merging 1st and 2nd neighbors es. 1.15 (value)
//spMergingEdgeModel = 2                       | Edge model (1=Kirsch,2=Chan-Vese) (value)
//use2ndNeighborsInSPMerging  T               | Use 2nd-order neighbors in superpixel merging (T/F)
//useCurvatureInSPMerging  T                  | Use curvature params in superpixel merging (T/F)
//useLogContrastInSPGeneration  F             | Use logarithmic contrast to generate initial partition (T/F)
//usePixelRatioCut  T  0.4                    | Use pixel ratio to tag background regions (if npix/npixtot>cut)  (T/F,value)
//tagSignificantSP  T  1  0.5                 | Tag significant superpixels if fraction of significant subregions is above cut (1=saliency,2=Mahalanobis) (T/F,method,cut)
###
###
